@model IEnumerable<WebBanPhuKienDienThoai.Models.Product>
@{
    ViewData["Title"] = "Products";
    int numOfQuantity = 1;
}

<h2 class="mb-4">Danh Sách Sản Phẩm</h2>

<!-- Container chính chia thành 2 phần -->
<div class="main-container">
    <!-- Phần lọc sản phẩm (1/3 bên trái) -->
    <div class="filter-section">
        <h4>Lọc Sản Phẩm</h4>
        <form asp-action="Index" method="get">
            <!-- Lọc theo danh mục -->
            <div class="mb-3">
                <label for="categoryId" class="form-label">Danh mục</label>
                <select id="categoryId" name="categoryId" class="form-select">
                    <option value="">Tất cả</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.Id" selected="@(category.Id == ViewBag.CategoryId ? "selected" : null)">@category.Name</option>
                    }
                </select>
            </div>

            <!-- Lọc theo loại thiết bị -->
            <div class="mb-3">
                <label for="deviceTypeId" class="form-label">Loại thiết bị</label>
                <select id="deviceTypeId" name="deviceTypeId" class="form-select">
                    <option value="">Tất cả</option>
                    @foreach (var device in ViewBag.DeviceTypes)
                    {
                        <option value="@device.Id" selected="@(device.Id == ViewBag.DeviceTypeId ? "selected" : null)">@device.Name</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Khoảng giá</label>
                <input type="range" class="form-range" id="minPrice" name="minPrice"
                       min="@ViewBag.MinPrice" max="@ViewBag.MaxPrice" value="@(ViewBag.MinPrice ?? 0)"
                       oninput="document.getElementById('minPriceValue').innerText = this.value" />
                <span>Giá tối thiểu: <span id="minPriceValue">@ViewBag.MinPrice</span> VND</span>

                <input type="range" class="form-range" id="maxPrice" name="maxPrice"
                       min="@ViewBag.MinPrice" max="@ViewBag.MaxPrice" value="@(ViewBag.MaxPrice ?? 10000000)"
                       oninput="document.getElementById('maxPriceValue').innerText = this.value" />
                <span>Giá tối đa: <span id="maxPriceValue">@ViewBag.MaxPrice</span> VND</span>
            </div>

            <!-- Nút áp dụng bộ lọc -->
            <button type="submit" class="btn btn-primary">Áp dụng</button>
        </form>
    </div>

    <!-- Phần danh sách sản phẩm (2/3 bên phải) -->
    <div class="product-section ">

        <div id="compare-section" class="mt-4 d-flex align-items-center flex-wrap gap-3"></div>

        <div id="product-container" class="product-grid ">

        </div>
        <div id="load-trigger"></div>
    </div>
</div>



<!-- CSS cập nhật -->
<style>
    .main-container {
        display: flex;
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
        gap: 20px;
    }

    .filter-section {
        flex: 1;
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        border: 1px solid #ddd;
    }

    .product-section {
        flex: 2;
    }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 250px));
        gap: 20px;
        justify-content: center;
    }

    .product-card {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        height: 450px;
    }

    .product-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .card-body {
        padding: 15px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        font-size: 1.1rem;
        margin-bottom: 10px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .card-text {
        font-size: 0.9rem;
        margin-bottom: 10px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
    }

    .btn {
        align-self: flex-start;
    }

    .form-range {
        width: 100%;
        margin: 10px 0;
    }

    .fa-star.checked {
        color: orange;
    }

</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    

    let page = 1;
    let isLoading = false;
    let hasMoreProducts = true;
    let observer = null;

    function loadProducts() {
        if (isLoading || !hasMoreProducts) return;
        isLoading = true;

        $.ajax({
            url: '@Url.Action("LoadMoreProduct", "Product")',
            type: 'GET',
            data: { page: page },
            success: function (data) {
                if (data.trim() === '') {
                    hasMoreProducts = false;
                    if (observer) observer.disconnect();
                } else {
                    $('#product-container').append(data);
                    page++;
                }
                isLoading = false;
            },
            error: function () {
                isLoading = false;
            }
        });
    }

    $(document).ready(function () {
        loadProducts(); // Tải trang đầu tiên

        let trigger = document.getElementById('load-trigger');
        if (trigger) {
            observer = new IntersectionObserver(function (entries) {
                if (entries[0].isIntersecting) {
                    loadProducts();
                }
            }, { threshold: 1.0 });
            observer.observe(trigger);
        }
    });

</script>