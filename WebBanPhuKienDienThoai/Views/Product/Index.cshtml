@model IEnumerable<WebBanPhuKienDienThoai.Models.Product>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Products";
    int numOfQuantity = 1;
}

<h2 class="mb-4 text-center fw-bold text-uppercase text-primary">Danh Sách Sản Phẩm</h2>

<div class="row">
    <!-- Bộ lọc -->
    <div class="col-lg-3 mb-4">
        <div class="bg-light p-4 rounded shadow-sm">
            <h5 class="mb-3">Lọc Sản Phẩm</h5>
            <form asp-action="Index" method="get">
                <div class="mb-3">
                    <label for="categoryId" class="form-label">Danh mục</label>
                    <select id="categoryId" name="categoryId" class="form-select">
                        <option value="">Tất cả</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Id" selected="@(category.Id == ViewBag.CategoryId ? "selected" : null)">@category.Name</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="deviceTypeId" class="form-label">Loại thiết bị</label>
                    <select id="deviceTypeId" name="deviceTypeId" class="form-select">
                        <option value="">Tất cả</option>
                        @foreach (var device in ViewBag.DeviceTypes)
                        {
                            <option value="@device.Id" selected="@(device.Id == ViewBag.DeviceTypeId ? "selected" : null)">@device.Name</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label class="form-label">Khoảng giá</label>
                    <input type="range" class="form-range" id="minPrice" name="minPrice"
                           min="@ViewBag.MinPrice" max="@ViewBag.MaxPrice" value="@(ViewBag.MinPrice ?? 0)"
                           oninput="document.getElementById('minPriceValue').innerText = this.value" />
                    <div class="small mb-2">Giá tối thiểu: <span id="minPriceValue">@ViewBag.MinPrice</span> VND</div>

                    <input type="range" class="form-range" id="maxPrice" name="maxPrice"
                           min="@ViewBag.MinPrice" max="@ViewBag.MaxPrice" value="@(ViewBag.MaxPrice ?? 10000000)"
                           oninput="document.getElementById('maxPriceValue').innerText = this.value" />
                    <div class="small">Giá tối đa: <span id="maxPriceValue">@ViewBag.MaxPrice</span> VND</div>
                </div>

                <button type="submit" class="btn btn-primary w-100 mt-2">Áp dụng</button>
            </form>
        </div>
    </div>

    <!-- Sản phẩm -->
    <div class="col-lg-9">
        <div id="compare-section" class="mb-4 d-flex align-items-center flex-wrap gap-3 border rounded p-3 bg-white shadow-sm"></div>
        <div class="row g-4">
            @foreach (var product in Model.Where(p => p.Stock > 0))
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <a asp-controller="Product" asp-action="Display" asp-route-id="@product.Id">
                            <img src="@product.ImageUrl" class="card-img-top product-img-hover" alt="Product Image" />
                        </a>
                        <div class="card-body d-flex flex-column text-center">
                            <h5 class="card-title text-dark fw-semibold">@product.Name</h5>
                            <p class="card-text text-muted small mb-1">
                                <strong>Danh mục:</strong> @product.Category?.Name
                            </p>
                            <p class="text-danger fw-bold fs-5 mb-2">@product.Price.ToString("C")</p>
                            <p class="card-text small text-truncate" title="@product.Description">@product.Description</p>
                            <div class="mb-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa fa-star @(i <= product.AverageRating ? "checked" : "")"></span>
                                }
                                <span class="small text-muted">(@product.Ratings.Count() đánh giá)</span>
                            </div>
                        </div>
                        <div class="card-footer bg-white border-0 d-flex justify-content-center gap-2 flex-wrap">
                            <a asp-action="Display" asp-route-id="@product.Id" class="btn btn-outline-primary btn-sm">
                                Chi tiết
                            </a>
                            <a class="compare btn btn-primary btn-sm" data-productid="@product.Id" data-name="@product.Name" data-image="@product.ImageUrl">
                                +
                            </a>
                            <a href="#" class="btn btn-dark btn-sm" onclick="addToCart(@product.Id, 1); return false;">
                                @Localizer["Add to Cart"]
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



<style>
    .product-img-hover {
        height: 220px;
        width: 100%;
        object-fit: contain; /* <<-- fix hình bị cắt */
       
        padding: 10px;
        border-radius: 10px;
        transition: transform 0.3s ease;
    }

        .product-img-hover:hover {
            transform: scale(1.05);
        }

    .fa-star {
        color: #ddd;
    }

        .fa-star.checked {
            color: #f39c12;
        }

    .card-title {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .card-footer .btn {
        min-width: 80px;
    }


    
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    

    // let page = 1;
    // let isLoading = false;
    // let hasMoreProducts = true;
    // let observer = null;

    // function loadProducts() {
    //     if (isLoading || !hasMoreProducts) return;
    //     isLoading = true;

    //     $.ajax({
    //         url: '@Url.Action("LoadMoreProduct", "Product")',
    //         type: 'GET',
    //         data: { page: page },
    //         success: function (data) {
    //             if (data.trim() === '') {
    //                 hasMoreProducts = false;
    //                 if (observer) observer.disconnect();
    //             } else {
    //                 $('#product-container').append(data);
    //                 page++;
    //             }
    //             isLoading = false;
    //         },
    //         error: function () {
    //             isLoading = false;
    //         }
    //     });
    // }

    // $(document).ready(function () {
    //     loadProducts(); Tải trang đầu tiên

    //     let trigger = document.getElementById('load-trigger');
    //     if (trigger) {
    //         observer = new IntersectionObserver(function (entries) {
    //             if (entries[0].isIntersecting) {
    //                 loadProducts();
    //             }
    //         }, { threshold: 1.0 });
    //         observer.observe(trigger);
    //     }
    // });

</script>